<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>数据结构 on int main() { return 0; } </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>https://intmainreturn0.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
    <language>zh-CN</language>
    
    
    <updated>Sun, 21 Aug 2016 15:39:12 UTC</updated>
    
    <item>
      <title>后缀数组倍增构造</title>
      <link>https://intmainreturn0.com/2016/08/21/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E5%80%8D%E5%A2%9E%E6%9E%84%E9%80%A0/</link>
      <pubDate>Sun, 21 Aug 2016 15:39:12 UTC</pubDate>
      
      <guid>https://intmainreturn0.com/2016/08/21/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E5%80%8D%E5%A2%9E%E6%9E%84%E9%80%A0/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;实在是太弱了看了两天4小时左右才基本把这个倍增构造看明白。。另外不得不说竞赛风格的板子虽然抄起来舒服但是对初学者而言的确不太友好……&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TRASH A dynamic LC-trie and hash data structure</title>
      <link>https://intmainreturn0.com/2016/07/15/trash-a-dynamic-lc-trie-and-hash-data-structure/</link>
      <pubDate>Fri, 15 Jul 2016 04:54:17 UTC</pubDate>
      
      <guid>https://intmainreturn0.com/2016/07/15/trash-a-dynamic-lc-trie-and-hash-data-structure/</guid>
      <description>http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.96.2143 传统Trie的优化。 path compression: 连续若干个只有一个孩子节点可以压成一个 LC（level compression）：若某一节点下面第k层的子树都非空，</description>
    </item>
    
  </channel>
</rss>

