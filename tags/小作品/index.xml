<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>小作品 on int main() { return 0; } </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>https://intmainreturn0.com/tags/%E5%B0%8F%E4%BD%9C%E5%93%81/</link>
    <language>zh-CN</language>
    
    
    <updated>Sun, 08 Jan 2017 12:17:48 UTC</updated>
    
    <item>
      <title>写点C&#43;&#43; user defined literals的奇怪（正常）用途</title>
      <link>https://intmainreturn0.com/2017/01/08/%E5%86%99%E7%82%B9c-user-defined-literals%E7%9A%84%E5%A5%87%E6%80%AA%E6%AD%A3%E5%B8%B8%E7%94%A8%E9%80%94/</link>
      <pubDate>Sun, 08 Jan 2017 12:17:48 UTC</pubDate>
      
      <guid>https://intmainreturn0.com/2017/01/08/%E5%86%99%E7%82%B9c-user-defined-literals%E7%9A%84%E5%A5%87%E6%80%AA%E6%AD%A3%E5%B8%B8%E7%94%A8%E9%80%94/</guid>
      <description>&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;之前写的围棋程序的测试中，我们常常需要vector&amp;lt; { Player, Point } &amp;gt; pieceToPlace。问题在于，如果我们硬编码这个vector，可读性很差：&lt;/p&gt;

&lt;pre class=&#34;language-cpp&#34;&gt;pieceToPlace.emplace_back(Player::B, make_pair(2, 3));
pieceToPlace.emplace_back(Player::B, make_pair(2, 1));
pieceToPlace.emplace_back(Player::W, make_pair(1, 0));&lt;/pre&gt;

&lt;p&gt;通过User defined literal，我们可以做到这样：&lt;/p&gt;

&lt;pre class=&#34;language-cpp&#34;&gt;auto placeVec = getInput({
    {O,   1_B,   2_W,   4_W},
    {6_W, 3_B,   5_B,   7_W},
    {O,   O,     O,     8_B},
    {9_W, O,     O,     O}
});
for (auto &amp;ele : placeVec) 
{
    cout &amp;lt;&amp;lt; (ele.player == Player::B ? &#34;B&#34; : &#34;W&#34;) &amp;lt;&amp;lt; &#34; &#34; &amp;lt;&amp;lt; ele.point.first &amp;lt;&amp;lt; &#34;,&#34; &amp;lt;&amp;lt; ele.point.second &amp;lt;&amp;lt; endl; 
}
/*
B 0,1
W 0,2
B 1,1
W 0,3
B 1,2
W 1,0
W 1,3
B 2,3
W 3,0
*/&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>

